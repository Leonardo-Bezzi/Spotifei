/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import Model.DAOs.MusicaDAO;
import Model.Musica;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Gamer
 */
public class TelaMusicasPlaylist extends javax.swing.JFrame {

    private int idPlaylist;
    private int idUsuario;

    /**
     * Creates new form TelaMusicasPlaylist
     */
    public TelaMusicasPlaylist(int idPlaylist, int idUsuario) {
        initComponents();
        this.idPlaylist = idPlaylist;
        this.idUsuario = idUsuario;
        carregarMusicas();
    }
    
    private void carregarMusicas() { //Carrega as musicas da playlist (tive que sorescrever a editabilidade das colunas para manter a simplicidade)
        MusicaDAO dao = new MusicaDAO();
        List<Musica> musicas = dao.listarPorPlaylist(idPlaylist, idUsuario);

        String[] colunas = {"ID", "Nome", "Artista", "Gênero", "Duração", "Curtida"};
        Object[][] dados = new Object[musicas.size()][colunas.length];

        for (int i = 0; i < musicas.size(); i++) {
            Musica m = musicas.get(i);
            dados[i][0] = m.getId();
            dados[i][1] = m.getNome();
            dados[i][2] = m.getArtista();
            dados[i][3] = m.getGenero();
            dados[i][4] = m.getDuracao();
            dados[i][5] = m.isCurtida();
        }

        javax.swing.table.DefaultTableModel modelo = new javax.swing.table.DefaultTableModel(dados, colunas) {
            Class[] types = new Class[] {Integer.class, String.class, String.class, String.class, Integer.class, Boolean.class};
            @Override
            public Class<?> getColumnClass(int columnIndex) {
                return types[columnIndex];
            }
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        tblResultados.setModel(modelo);

        tblResultados.getColumnModel().getColumn(5).setCellRenderer(new javax.swing.table.DefaultTableCellRenderer() {
            @Override
            public java.awt.Component getTableCellRendererComponent(javax.swing.JTable table, Object value,
                    boolean isSelected, boolean hasFocus, int row, int column) {
                javax.swing.JCheckBox checkBox = new javax.swing.JCheckBox();
                checkBox.setSelected(value != null && (Boolean) value);
                checkBox.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                checkBox.setEnabled(false);
                if (isSelected) {
                    checkBox.setBackground(table.getSelectionBackground());
                } else {
                    checkBox.setBackground(table.getBackground());
                }
                return checkBox;
            }
        });

        tblResultados.getColumnModel().getColumn(5).setCellEditor(null);
    }


    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnVoltar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        btnAdicionarMusica = new javax.swing.JButton();
        btnRemoverMusica = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblResultados = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Músicas na Playlist");
        setResizable(false);

        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel4.setText("SPOTIFEI");

        btnAdicionarMusica.setText("Adicionar música");
        btnAdicionarMusica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarMusicaActionPerformed(evt);
            }
        });

        btnRemoverMusica.setText("Remover música");
        btnRemoverMusica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverMusicaActionPerformed(evt);
            }
        });

        tblResultados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "Artista", "Gênero", "Duração", "Curtida"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblResultados);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnVoltar)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnAdicionarMusica, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnRemoverMusica, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdicionarMusica, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRemoverMusica, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(btnVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        new TelaPlaylists(idUsuario).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnAdicionarMusicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarMusicaActionPerformed
        //Adiciona a musica na playlist
        String input = JOptionPane.showInputDialog(this, "Digite o ID da música para adicionar à playlist:");
        if (input != null && !input.isEmpty()) {
            try {
                int idMusica = Integer.parseInt(input);
                MusicaDAO dao = new MusicaDAO();
                boolean sucesso = dao.adicionarMusicaNaPlaylist(idMusica, idPlaylist, idUsuario);
                if (sucesso) {
                    JOptionPane.showMessageDialog(this, "Música adicionada com sucesso!");
                    carregarMusicas();
                } else {
                    JOptionPane.showMessageDialog(this, "Erro ao adicionar a música.");
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "ID inválido.");
            }
        }
    }//GEN-LAST:event_btnAdicionarMusicaActionPerformed

    private void btnRemoverMusicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverMusicaActionPerformed
        //Remove a musica na playlist
        String input = JOptionPane.showInputDialog(this, "Digite o ID da música para remover da playlist:");
        if (input != null && !input.isEmpty()) {
            try {
                int idMusica = Integer.parseInt(input);
                MusicaDAO dao = new MusicaDAO();
                boolean sucesso = dao.removerMusicaDaPlaylist(idMusica, idPlaylist, idUsuario);
                if (sucesso) {
                    JOptionPane.showMessageDialog(this, "Música removida com sucesso!");
                    carregarMusicas();
                } else {
                    JOptionPane.showMessageDialog(this, "Erro ao remover a música.");
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "ID inválido.");
            }
        }  
    }//GEN-LAST:event_btnRemoverMusicaActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionarMusica;
    private javax.swing.JButton btnRemoverMusica;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblResultados;
    // End of variables declaration//GEN-END:variables
}
