/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.table.DefaultTableModel;

/**
 * Tela que exibe o histórico de atividades do usuário logado no sistema Spotifei.
 * Mostra uma lista com os termos buscados e uma tabela com ações de curtir/descurtir músicas.
 * 
 * A tela também possui botão para retornar ao menu principal.
 * 
 * @author Leonardo Bezzi Elias
 */
public class TelaHistorico extends javax.swing.JFrame {

    private int idUsuario;
    
    /**
     * Creates new form TelaHistorico
     */
    /**
     * Construtor da classe. Inicializa a tela e carrega os dados do histórico.
     * 
     * @param idUsuario ID do usuário logado (usado para buscar o histórico no banco)
     */
    public TelaHistorico(int idUsuario) {
        this.idUsuario = idUsuario;
        initComponents();
        carregarHistoricos();
    }
    /**
     * Carrega e exibe os históricos de busca e curtidas/descurtidas do usuário.
     * Utiliza os métodos dos controllers para obter os dados e os insere nos componentes da interface.
     */
    private void carregarHistoricos() { //Carrega os históricos
        List<String> buscas = Controller.HistoricoController.getHistoricoBuscas(idUsuario);
        DefaultListModel<String> modelBuscas = new DefaultListModel<>();
        for (String termo : buscas) {
            modelBuscas.addElement(termo);
        }
        listaBuscas.setModel(modelBuscas);

        List<Model.CurtidaInfo> curtidas = Controller.CurtidasController.getHistoricoCurtidas(idUsuario);
        DefaultTableModel modelCurtidas = (DefaultTableModel) tabelaCurtidas.getModel();
        modelCurtidas.setRowCount(0); // limpa tabela
        for (Model.CurtidaInfo c : curtidas) {
            String acao = c.isCurtida() ? "Curtida" : "Descurtida";
            modelCurtidas.addRow(new Object[]{c.getNomeMusica(), acao});
        }
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnVoltar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaBuscas = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaCurtidas = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Histórico");

        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        listaBuscas.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(listaBuscas);

        tabelaCurtidas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Música", "Ação"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tabelaCurtidas);

        jLabel1.setText("Histórico de busca");

        jLabel2.setText("Histórico de curtidas/descurtidas");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnVoltar)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE))
                .addGap(43, 43, 43)
                .addComponent(btnVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * Evento acionado ao clicar no botão "Voltar".
     * Redireciona o usuário de volta para a tela principal.
     * 
     * @param evt Evento de clique
     */
    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        new TelaPrincipal(Model.Sessao.getUsuario()).setVisible(true); // Abre o menu principal
        this.dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    // O método main não é utilizado diretamente nessa tela pois ela depende do ID do usuário logado.


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnVoltar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> listaBuscas;
    private javax.swing.JTable tabelaCurtidas;
    // End of variables declaration//GEN-END:variables
}
